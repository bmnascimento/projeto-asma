{"version":3,"sources":["services/login.js","Login.js","services/patients.js","Dashboard/Pacientes/ListaPacientes.js","Dashboard/Pacientes/Resumo.js","Dashboard/Pacientes/Dados.js","Dashboard/Pacientes/Metas.js","services/sintomas.js","Dashboard/Pacientes/Sintomas.js","Dashboard/Pacientes/PerfilPaciente.js","services/usuarios.js","Dashboard/ListaUsuarios.js","Dashboard/Pacientes/CadastroPaciente.js","Dashboard/CadastroUsuario.js","Dashboard/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["login","credentials","a","axios","post","response","data","LoginForm","setUser","alertar","useState","rghg","setRGHG","password","setPassword","lembrarme","setLembrarme","carregando","setCarregando","history","useHistory","handleSubmit","event","preventDefault","loginService","user","window","localStorage","setItem","JSON","stringify","push","Form","onSubmit","Group","controlId","Label","Control","type","placeholder","value","onChange","target","Check","label","checked","Button","variant","Spinner","animation","role","size","Login","alerta","setAlerta","Navbar","bg","Brand","className","Container","Alert","Row","Col","mensagem","setTimeout","formatDate","date","month","getMonth","day","getDate","year","getFullYear","length","join","get","then","id","newObject","ListaPacientes","undefined","patients","setPatients","useEffect","patientService","style","width","to","map","patient","key","name","aria-hidden","Resumo","Dados","linhas","Table","striped","bordered","hover","linha","numPassos","minutosAtivos","minutosSedentarios","Metas","console","log","setLinhas","promises","Date","i","sintomasService","setDate","Promise","all","responses","concat","tosse","faltaDeAr","bombinha","acordar","PerfilPaciente","setPatient","dataFormatada","setDataFormatada","useParams","birthDate","fitbitId","quantidadeLinhas","summary","steps","fairlyActiveMinutes","veryActiveMinutes","sedentaryMinutes","fetchData","url","useRouteMatch","height","weight","phone","href","path","Sintomas","ListaUsuarios","usuarios","setUsuarios","usuarioService","usuario","class","CadastroPaciente","newName","setNewName","newPhone","setNewPhone","newHeight","setNewHeight","newWeight","setNewWeight","newRghg","setNewRghg","newCpf","setNewCpf","newData","setNewData","newPassword","setNewPassword","cpf","catch","alert","htmlFor","min","CadastroUsuario","newType","setNewType","userService","Dashboard","Toggle","Collapse","Text","onClick","removeItem","App","parse","getItem","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.6d85d630.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(`${baseUrl}/usuario`, credentials)\n  return response.data\n}\n\nexport default {\n  login\n}\n","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport Alert from 'react-bootstrap/Alert'\r\n\r\nimport loginService from './services/login'\r\n\r\nconst Login = ({ setUser }) => {\r\n  const [alerta, setAlerta] = useState(null)\r\n\r\n  function alertar(mensagem) {\r\n    setAlerta(mensagem)\r\n    setTimeout(() => setAlerta(null), 3000)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <header>\r\n        <Navbar bg=\"dark\" variant=\"dark\">\r\n          <Navbar.Brand>Login</Navbar.Brand>\r\n        </Navbar>\r\n      </header>\r\n      <main className=\"bg-light\">\r\n        <Container>\r\n          {alerta &&\r\n            <Alert variant={'danger'} className={'mt-3'} >\r\n              {alerta}\r\n            </Alert>\r\n          }\r\n          <Row className=\"justify-content-center\">\r\n            <Col className=\"col-md-5 col-lg-4 p-3 m-4 border\">\r\n              <LoginForm setUser={setUser} alertar={alertar} />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </main>\r\n    </>\r\n  )\r\n}\r\n\r\nconst LoginForm = ({ setUser, alertar }) => {\r\n  const [rghg, setRGHG] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [lembrarme, setLembrarme] = useState(false)\r\n  const [carregando, setCarregando] = useState(false)\r\n\r\n  const history = useHistory()\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault()\r\n\r\n    try {\r\n      setCarregando(true)\r\n\r\n      const user = await loginService.login({\r\n        rghg,\r\n        password\r\n      })\r\n\r\n      if (lembrarme)\r\n        window.localStorage.setItem('usuarioLogado', JSON.stringify(user))\r\n\r\n      setUser(user)\r\n      setCarregando(false)\r\n      history.push('/')\r\n\r\n    } catch (exception) {\r\n      setCarregando(false)\r\n      alertar('Usuário ou senha errados')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit} >\r\n      <Form.Group controlId=\"RGHG\">\r\n        <Form.Label>RGHC</Form.Label>\r\n        <Form.Control type=\"text\" placeholder=\"RGHG\" value={rghg} onChange={({ target }) => setRGHG(target.value)} />\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"Password\">\r\n        <Form.Label>Senha</Form.Label>\r\n        <Form.Control type=\"password\" placeholder=\"Senha\" value={password} onChange={({ target }) => setPassword(target.value)} />\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"formBasicCheckbox\">\r\n        <Form.Check type=\"checkbox\" label=\"Lembrar-me\" checked={lembrarme} onChange={({ target }) => setLembrarme(target.checked)} />\r\n      </Form.Group>\r\n\r\n      <Button variant=\"primary\" type=\"submit\">\r\n        {carregando ? <Spinner animation=\"border\" role=\"status\" size=\"sm\" /> : 'Entrar'}\r\n      </Button>\r\n\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default Login","import axios from 'axios'\nconst baseUrl = '/api/patients'\n\nconst getAll = () => {\n  return axios.get(baseUrl).then(response => response.data)\n}\n\nconst getOne = id => {\n  return axios.get(`${baseUrl}/${id}`).then(response => response.data)\n}\n\nconst create = newObject => {\n  return axios.post(baseUrl, newObject).then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  return axios.put(`${baseUrl}/${id}`, newObject).then(response => response.data)\n}\n\nconst deleteOne = id => {\n  return axios.delete(`${baseUrl}/${id}`).then(response => response.data)\n}\n\nconst getData = (id, date) => {\n  return axios.get(`${baseUrl}/data/${id}/${formatDate(date)}`).then(response => response.data)\n}\n\nconst formatDate = date => {\n  let month = '' + (date.getMonth() + 1)\n  let day = '' + date.getDate()\n  let year = date.getFullYear()\n\n  if (month.length < 2)\n    month = '0' + month\n  if (day.length < 2)\n    day = '0' + day\n\n  return [year, month, day].join('-')\n}\n\nexport default {\n  getAll,\n  getOne,\n  create,\n  update,\n  deleteOne,\n  getData\n}\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport patientService from '../../services/patients.js'\nimport Button from 'react-bootstrap/Button'\n\nconst ListaPacientes = () => {\n  const [ patients, setPatients ] = useState(undefined)\n\n  useEffect(() => {\n    patientService.getAll().then(response => setPatients(response))\n  }, [])\n\n  return(\n    <div style={{ width: '300px' }}>\n        <Link to=\"/pacientes/cadastro\"><Button className=\"float-right mt-1\">Novo</Button></Link>\n        <h1>Pacientes</h1>\n          {patients\n            ?\n            <div className=\"list-group my-3\">\n            {patients.map(patient => \n              <Link\n                to={`pacientes/${patient.id}/resumo`}\n                key={patient.id}\n                className=\"list-group-item list-group-item-action text-primary\"\n              >\n                  {patient.name}\n              </Link>\n            )}\n            </div>\n            :\n            <div className=\"d-flex align-items-center my-3\">\n              Carregando...\n              <div className=\"spinner-border ml-auto\" role=\"status\" aria-hidden=\"true\"></div>\n            </div>\n          }\n    </div>\n  )}\n\nexport default ListaPacientes","import React from 'react'\n\nconst Resumo = () => {\n  return (\n    <div className=\"border-right border-bottom border-left p-3\">\n      <h4>Resumo</h4>\n    </div>\n  )\n}\n\nexport default Resumo\n","import React from 'react'\nimport Table from 'react-bootstrap/Table'\n\nconst Dados = ({ linhas }) => {\n  return (\n    <div className=\"border-right border-bottom border-left p-3\">\n      <h4>Dados</h4>\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th>Data</th>\n            <th>nº de passos</th>\n            <th>Horas ativas</th>\n            <th>Horas Sedentarias</th>\n          </tr>\n        </thead>\n        <tbody>\n          {linhas.map(linha => \n            <tr key={linha.data}>\n              <td>{linha.data}</td>\n              <td>{linha.numPassos}</td>\n              <td>{linha.minutosAtivos/60}</td>\n              <td>{linha.minutosSedentarios/60}</td>\n            </tr>\n          )}\n        </tbody>\n      </Table>\n    </div>\n  )\n}\n\nexport default Dados\n","import React from 'react'\n\nconst Metas = () => {\n  return (\n    <div className=\"border-right border-bottom border-left p-3\">\n      <h4>Metas</h4>\n    </div>\n  )\n}\n\nexport default Metas\n","import axios from 'axios'\nconst baseUrl = \"/api/sintomas\"\n\nconst getAll = (id, date) => {\n    console.log (id)\n    return axios.get(`${baseUrl}/${id}/${date}`).then(response => response.data)\n    \n  }\n  \n  /*const getOne = id => {\n    return axios.get(`${baseUrl}/${id}`).then(response => response.data)\n  }*/\n  \n  const create = (id, newObject) => {\n    return axios.post(`${baseUrl}/${id}`, newObject).then(response => response.data)\n  }\n  \n  const update = (id, newObject) => {\n    return axios.put(`${baseUrl}/${id}`, newObject).then(response => response.data)\n  }\n  \n  const deleteOne = id => {\n    return axios.delete(`${baseUrl}/${id}`).then(response => response.data)\n  }\n  \n  export default {\n    getAll,\n    //getOne,\n    create,\n    update,\n    deleteOne\n  }","import React, { useState, useEffect } from 'react'\nimport Table from 'react-bootstrap/Table'\nimport sintomasService from './../../services/sintomas'\n\nconst Dados = ({ id }) => {\n  const [linhas, setLinhas] = useState([])\n\n  useEffect(() => {\n    let promises = []\n    const quantidadeLinhas = 5\n\n    const date = new Date()\n    for (let i = 0; i < quantidadeLinhas; i++) {\n      promises.push(sintomasService.getAll(id, formatDate(date)))\n\n      date.setDate(date.getDate() - 1)\n    }\n\n    Promise.all(promises)\n      .then(responses => {\n        const date = new Date()\n        console.log(responses)\n\n        for (let i = 0; i < quantidadeLinhas; i++) {\n          const response = responses[i]\n\n          if (response.length !== 0) {\n            setLinhas(linhas => linhas.concat({\n              data: formatDate(date),\n              tosse: response[0].tosse,\n              faltaDeAr: response[0].faltaDeAr,\n              bombinha: response[0].bombinha,\n              acordar: response[0].acordar\n            }))\n            console.log(response[0].tosse)\n            console.log(response[0].faltaDeAr)\n            console.log(response[0].bombinha)\n            console.log(response[0].acordar)\n          }\n\n          date.setDate(date.getDate() - 1)\n\n        }\n\n\n      })\n\n  }, [id])\n\n  return (\n    <div className=\"border-right border-bottom border-left p-3\">\n      <h4>Dados</h4>\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n          <th>Data</th>\n            <th>Teve tosse?</th>\n            <th>Teve falta de ar?</th>\n            <th>Usou a bombinha?</th>\n            <th>Acordou de madrugada?</th>\n          </tr>\n        </thead>\n        <tbody>\n          {linhas.map(linha =>\n            <tr key={linha.data}>\n              <td>{linha.data}</td>\n              <td>{linha.tosse && \"Teve\"}</td>\n              <td>{linha.faltaDeAr && \"Teve\"}</td>\n              <td>{linha.bombinha && \"Teve\"}</td>\n              <td>{linha.acordar && \"Teve\"}</td>\n            </tr>\n          )}\n        </tbody>\n      </Table>\n    </div>\n  )\n}\n\nconst formatDate = date => {\n  let month = '' + (date.getMonth() + 1)\n  let day = '' + date.getDate()\n  let year = date.getFullYear()\n\n  if (month.length < 2)\n    month = '0' + month\n  if (day.length < 2)\n    day = '0' + day\n\n  return [year, month, day].join('-')\n}\n\nexport default Dados","import React, { useState, useEffect } from 'react'\nimport {\n  Switch, Route, NavLink,\n  useParams, useRouteMatch\n} from 'react-router-dom'\nimport patientService from '../../services/patients.js'\nimport Spinner from 'react-bootstrap/Spinner'\n\nimport Resumo from './Resumo'\nimport Dados from './Dados'\nimport Metas from './Metas'\nimport Sintomas from './Sintomas'\n\nconst PerfilPaciente = () => {\n  const [patient, setPatient] = useState(undefined)\n  const [linhas, setLinhas] = useState([])\n  const [dataFormatada, setDataFormatada] = useState()\n\n  const id = useParams().id\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const patient = await patientService.getOne(id)\n      setPatient(patient)\n      const dataFormatada = new Date(patient.birthDate)\n      setDataFormatada(formatDate(dataFormatada))\n\n      if (patient.fitbitId) {\n        let promises = []\n        const quantidadeLinhas = 5\n\n        let date = new Date()\n        for (let i = 0; i < quantidadeLinhas; i++) {\n          promises.push(patientService.getData(id, date))\n          date.setDate(date.getDate() - 1)\n        }\n\n        const responses = await Promise.all(promises)\n\n        date = new Date()\n\n        for (let i = 0; i < quantidadeLinhas; i++) {\n          const response = responses[i]\n\n          setLinhas(linhas => linhas.concat({\n            data: formatDate(date),\n            numPassos: response.summary.steps,\n            minutosAtivos: response.summary.fairlyActiveMinutes + response.summary.veryActiveMinutes,\n            minutosSedentarios: response.summary.sedentaryMinutes\n          }))\n          date.setDate(date.getDate() - 1)\n        }\n      }\n    }\n\n    fetchData()\n  }, [id])\n\n  const { url } = useRouteMatch()\n\n  return (\n    <>\n      {patient === undefined\n        ?\n        <>\n        <Spinner animation=\"border\" role=\"status\" size=\"sm\"/> Carregando...\n        </>\n        :\n        <>\n          <div>\n            <div>Nome: {patient.name}</div>\n            <div>Peso: {patient.height} kg</div>\n            <div>Altura: {patient.weight} cm</div>\n            <div>Telefone: {patient.phone}</div>\n            <div>RGHC: {patient.rghg}</div>\n            <div>Data de Nascimento: {dataFormatada}</div>\n            <div>ID Fitbit: {patient.fitbitId ? patient.fitbitId : <a href={`/auth/fitbit/${id}`}>Conectar ao Fitbit</a>}</div>\n\n          </div>\n\n          <br />\n\n          <ul className=\"nav nav-tabs\">\n            <li className=\"nav-item\">\n              <NavLink to={`${url}/resumo`} className=\"nav-link\">Resumo</NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink to={`${url}/dados`} className=\"nav-link\">Dados</NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink to={`${url}/metas`} className=\"nav-link\">Metas</NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink to={`${url}/sintomas`} className=\"nav-link\">Sintomas</NavLink>\n            </li>\n          </ul>\n\n          <Switch>\n            <Route path={`${url}/resumo`}>\n              <Resumo />\n            </Route>\n            <Route path={`${url}/dados`}>\n              {patient.fitbitId ? <Dados linhas={linhas} /> : <div className=\"border-right border-bottom border-left p-3\">Não há conexão com Fitbit</div>}\n            </Route>\n            <Route path={`${url}/metas`}>\n              <Metas />\n            </Route>\n            <Route path={`${url}/sintomas`}>\n              <Sintomas id={id}/>\n            </Route>\n          </Switch>\n        </>\n      }\n    </>\n  )\n}\n\nconst formatDate = date => {\n  let month = '' + (date.getMonth() + 1)\n  let day = '' + date.getDate()\n  let year = date.getFullYear()\n\n  if (month.length < 2)\n    month = '0' + month\n  if (day.length < 2)\n    day = '0' + day\n\n  return [year, month, day].join('-')\n}\n\nexport default PerfilPaciente","import axios from 'axios'\nconst baseUrl = '/api/usuarios'\n\nconst getAll = () => {\n  return axios.get(baseUrl).then(response => response.data)\n}\n\nconst create = newObject => {\n  return axios.post(baseUrl, newObject).then(response => response.data)\n}\n\nexport default {\n  getAll,\n  create\n}\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport usuarioService from '../services/usuarios.js'\nimport Button from 'react-bootstrap/Button'\n\nconst ListaUsuarios = () => {\n  const [ usuarios, setUsuarios ] = useState(undefined)\n\n  useEffect(() => {\n    usuarioService.getAll().then(response => setUsuarios(response))\n  }, [])\n\n  return(\n    <div style={{ width: '300px' }}>\n        <Link to=\"/usuarios/cadastro\"><Button className=\"float-right mt-1\">Novo</Button></Link>\n        <h1>Usuários</h1>\n\n        {usuarios ?\n          <div className=\"list-group my-3\">\n          {usuarios.map(usuario => \n            <div\n              key={usuario.id}\n              className=\"list-group-item d-flex justify-content-between align-items-center\"\n            >\n                {usuario.name} - {usuario.rghg} {usuario.type === 'admin' && <span class=\"badge badge-primary badge-pill\">Admin</span>}\n            </div>\n          )}\n          </div>\n          :\n          <div className=\"d-flex align-items-center my-3\">\n            Carregando...\n            <div className=\"spinner-border ml-auto\" role=\"status\" aria-hidden=\"true\"></div>\n          </div>\n          }\n    </div>\n  )}\n\nexport default ListaUsuarios","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport patientService from '../../services/patients.js'\r\n\r\nconst CadastroPaciente = () => {\r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newPhone, setNewPhone ] = useState('')\r\n  const [ newHeight, setNewHeight ] = useState('')\r\n  const [ newWeight, setNewWeight ] = useState('')\r\n  const [ newRghg, setNewRghg ] = useState('')\r\n  const [ newCpf, setNewCpf ] = useState('')\r\n  const [ newData, setNewData ] = useState('')\r\n  const [ newPassword, setNewPassword ] = useState('')\r\n  \r\n  const history = useHistory()\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault()\r\n\r\n    patientService.create({ name: newName, phone: newPhone, height: newHeight, weight: newWeight, rghg: newRghg, cpf: newCpf, birthDate: newData, password: newPassword })\r\n      .then(response => {\r\n        history.push('/pacientes')\r\n      })\r\n      .catch(() => alert('nao foi possivel adicionar o paciente'))\r\n  }\r\n\r\n  return(\r\n    <div style={{ width: '300px' }}>\r\n      <h2>Cadastrar Paciente</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"nameInput\">Nome</label>\r\n          <input value={newName} type=\"text\" onChange={event => setNewName(event.target.value)} className=\"form-control\" id=\"nameInput\"/>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"weightInput\">Peso (kg)</label>\r\n          <input value={newWeight} type=\"number\" min=\"1\" onChange={event => setNewWeight(event.target.value)} className=\"form-control\" id=\"weightInput\"/>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"heightInput\">Altura (cm)</label>\r\n          <input value={newHeight} type=\"number\" min=\"1\" onChange={event => setNewHeight(event.target.value)} className=\"form-control\" id=\"heightInput\"/>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"phoneInput\">Telefone</label>\r\n          <input value={newPhone} type=\"tel\" onChange={event => setNewPhone(event.target.value)} className=\"form-control\" id=\"phoneInput\"/>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"rghgInput\">RGHG</label>\r\n          <input value={newRghg} type=\"text\" onChange={event => setNewRghg(event.target.value)} className=\"form-control\" id=\"rghgInput\"/>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"cpfInput\">CPF</label>\r\n          <input value={newCpf} type=\"text\" onChange={event => setNewCpf(event.target.value)} className=\"form-control\" id=\"cpfInput\"/>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"dataInput\">Data de Nascimento</label>\r\n          <input value={newData} type=\"date\" onChange={event => setNewData(event.target.value)} className=\"form-control\" id=\"dataInput\"/>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"passwordInput\">Senha</label>\r\n          <input value={newPassword} type=\"text\" onChange={event => setNewPassword(event.target.value)} className=\"form-control\" id=\"passwordInput\"/>\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">Adicionar</button>\r\n      </form>\r\n    </div>\r\n  )}\r\n\r\nexport default CadastroPaciente","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport userService from '../services/usuarios.js'\r\n\r\nconst CadastroUsuario = () => {\r\n  const [newName, setNewName] = useState('')\r\n  const [newRghg, setNewRghg] = useState('')\r\n  const [newPassword, setNewPassword] = useState('')\r\n  const [newType, setNewType] = useState('')\r\n\r\n  const history = useHistory()\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault()\r\n\r\n    userService.create({ name: newName, rghg: newRghg, password: newPassword, type: newType })\r\n      .then(response => {\r\n        history.push('/usuarios')\r\n      })\r\n      .catch(() => alert('nao foi possivel adicionar o profissional'))\r\n\r\n  }\r\n\r\n  return (\r\n    <div style={{ width: '300px' }}>\r\n      <h2>Cadastro de Usuário</h2>\r\n\r\n      <div>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"nameInput\">Nome</label>\r\n            <input value={newName} type=\"text\" onChange={event => setNewName(event.target.value)} className=\"form-control\" id=\"nameInput\" />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"rghgInput\">RGHG</label>\r\n            <input value={newRghg} type=\"text\" onChange={event => setNewRghg(event.target.value)} className=\"form-control\" id=\"rghgInput\" />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"passwordInput\">Senha</label>\r\n            <input value={newPassword} type=\"text\" onChange={event => setNewPassword(event.target.value)} className=\"form-control\" id=\"passwordInput\" />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"typeInput\">Tipo</label>\r\n            <select id=\"typeInput\" name=\"tipo\" value={newType} onChange={event => setNewType(event.target.value)} className=\"form-control\">\r\n              <option value=\"profissional\">Profissional de Saúde</option>\r\n              <option value=\"admin\">Administrador</option>\r\n            </select>\r\n          </div>\r\n\r\n          <button type=\"submit\" className=\"btn btn-primary\">Adicionar</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CadastroUsuario","import React from 'react'\nimport { Switch, Route, NavLink, Redirect } from 'react-router-dom'\nimport ListaPacientes from './Pacientes/ListaPacientes'\nimport PerfilPaciente from './Pacientes/PerfilPaciente'\nimport ListaUsuarios from './ListaUsuarios'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Button from 'react-bootstrap/Button'\nimport CadastroPaciente from './Pacientes/CadastroPaciente'\nimport CadastroUsuario from './CadastroUsuario'\n\nconst Dashboard = ({ user, setUser }) => {\n  const logout = () => {\n    window.localStorage.removeItem('usuarioLogado')\n    setUser(null)\n  }\n\n  return (\n    <>\n      <header>\n        <Navbar bg=\"dark\" variant=\"dark\">\n          <Navbar.Brand>Dashboard</Navbar.Brand>\n          <Navbar.Toggle />\n          <Navbar.Collapse className=\"justify-content-end\">\n            <Navbar.Text>\n              Logado como {user.name} <Button variant=\"dark\" onClick={logout}>Logout</Button>\n            </Navbar.Text>\n          </Navbar.Collapse>\n        </Navbar>\n      </header>\n      <main className=\"container-fluid h-100\">\n        <div className=\"row h-100\">\n          <div className=\"col-sm-3 col-md-2 bg-light py-3 border-right\">\n            <nav className=\"nav nav-pills flex-column\">\n              <NavLink className=\"nav-item nav-link\" to=\"/pacientes\">Pacientes</NavLink>\n              <NavLink className=\"nav-item nav-link\" to=\"/usuarios\">Usuários</NavLink>\n            </nav>\n          </div>\n\n          <main className=\"col-sm-9 col-md-10 bg-white p-4\">\n            <Switch>\n              <Route path=\"/pacientes/cadastro\">\n                <CadastroPaciente />\n              </Route>\n              <Route path=\"/pacientes/:id\">\n                <PerfilPaciente />\n              </Route>\n              <Route path=\"/pacientes\">\n                <ListaPacientes />\n              </Route>\n              <Route path=\"/usuarios/cadastro\">\n                <CadastroUsuario />\n              </Route>\n              <Route path=\"/usuarios\">\n                <ListaUsuarios />\n              </Route>\n              <Route path=\"/\">\n                <Redirect to=\"/pacientes\"/>\n              </Route>\n            </Switch>\n          </main>\n        </div>\n      </main>\n    </>\n  )\n}\n\nexport default Dashboard","import React, { useState } from 'react'\nimport {\n  HashRouter as Router,\n  Switch, Route, Redirect\n} from 'react-router-dom'\n\nimport Login from './Login'\nimport Dashboard from './Dashboard/Dashboard'\n\nconst App = () => {\n  const [user, setUser] = useState(JSON.parse(window.localStorage.getItem('usuarioLogado')))\n\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/login\">\n          <Login setUser={setUser} />\n        </Route>\n        <Route path=\"/\">\n          {user ? <Dashboard user={user} setUser={setUser} /> : <Redirect to=\"/login\" />}\n        </Route>\n      </Switch>\n      <footer className=\"text-center bg-dark text-muted p-3 mt-auto\">\n        O código desse site está disponível no <a href=\"https://github.com/bmnascimento/projeto-asma\">GitHub</a>\n      </footer>\n    </Router>\n  )\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      //registration.showNotification('teste')\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './css/bootstrap.min.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}