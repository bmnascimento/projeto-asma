{"version":3,"sources":["services/patients.js","Pacientes/ListaPacientes.js","Pacientes/Resumo.js","services/dataPatients.js","Pacientes/Dados.js","Pacientes/Metas.js","Pacientes/DadosPaciente.js","Home.js","Ajuda.js","Dashboard.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","id","newObject","post","ListaPacientes","useState","undefined","patients","setPatients","newName","setNewName","newPhone","setNewPhone","newFitbitId","setNewFitbitId","useEffect","patientService","style","width","onSubmit","event","preventDefault","find","patient","name","phone","fitbitId","concat","catch","alert","className","htmlFor","value","onChange","target","type","map","to","key","role","aria-hidden","Resumo","date","formatDate","month","getMonth","day","getDate","year","getFullYear","length","join","Dados","linhas","setLinhas","promises","Date","i","push","patientDataService","setDate","Promise","all","responses","numPassos","summary","steps","minutosAtivos","fairlyActiveMinutes","lightlyActiveMinutes","veryActiveMinutes","minutosSedentarios","sedentaryMinutes","Table","striped","bordered","hover","linha","Metas","DadosPacientes","setPatient","useParams","url","useRouteMatch","href","path","Home","Ajuda","Dashboard","exact","DadosPaciente","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e30fe0b9.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/patients'\n\nconst getAll = () => {\n  return axios.get(baseUrl).then(response => response.data)\n}\n\nconst getOne = id => {\n  return axios.get(`${baseUrl}/${id}`).then(response => response.data)\n}\n\nconst create = newObject => {\n  return axios.post(baseUrl, newObject).then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  return axios.put(`${baseUrl}/${id}`, newObject).then(response => response.data)\n}\n\nconst deleteOne = id => {\n  return axios.delete(`${baseUrl}/${id}`).then(response => response.data)\n}\n\nexport default {\n  getAll,\n  getOne,\n  create,\n  update,\n  deleteOne\n}\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport patientService from '../services/patients.js'\n\nconst ListaPacientes = () => {\n  const [ patients, setPatients ] = useState(undefined) \n  const [ newName, setNewName ] = useState('')\n  const [ newPhone, setNewPhone ] = useState('')\n  const [ newFitbitId, setNewFitbitId ] = useState('')\n\n  useEffect(() => {\n    patientService.getAll().then(response => setPatients(response))\n  }, [])\n  \n  const handleSubmit = event => {\n    event.preventDefault()\n\n    const foundPatient = patients.find(patient => patient.name === newName)\n    if (foundPatient === undefined) {\n      patientService.create({ name: newName, phone: newPhone, fitbitId: newFitbitId })\n        .then(response => {\n          setPatients(patients.concat(response))\n          setNewPhone('')\n          setNewName('')\n        })\n        .catch(() => alert('nao foi possivel adicionar paciente'))\n    } else {\n      alert('Pessoa j√° adicionada')\n    }\n  }\n\n  return(\n    <div style={{ width: '250px' }}>\n        <h1>Pacientes</h1>\n\n        <div>\n          <form onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n              <label htmlFor=\"nameInput\">Nome:</label>\n              <input value={newName} onChange={event => setNewName(event.target.value)} className=\"form-control\" id=\"nameInput\"/>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"phoneInput\">Telefone:</label>\n              <input value={newPhone} onChange={event => setNewPhone(event.target.value)} className=\"form-control\" id=\"phoneInput\"/>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"fitbitIdInput\">ID Fitbit:</label>\n              <input value={newFitbitId} onChange={event => setNewFitbitId(event.target.value)} className=\"form-control\" id=\"fitbitIdInput\"/>\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\">Adicionar</button>\n          </form>\n        </div>\n\n        {patients ?\n          <div className=\"list-group my-3\">\n          {patients.map(patient => \n            <Link\n              to={`pacientes/${patient.id}/resumo`}\n              key={patient.id}\n              className=\"list-group-item list-group-item-action text-primary\"\n            >\n                {patient.name}\n            </Link>\n          )}\n          </div>\n          :\n          <div className=\"d-flex align-items-center my-3\">\n            Carregando...\n            <div className=\"spinner-border ml-auto\" role=\"status\" aria-hidden=\"true\"></div>\n          </div>\n          }\n    </div>\n  )}\n\nexport default ListaPacientes","import React from 'react'\n\nconst Resumo = () => {\n  return (\n    <div className=\"border-right border-bottom border-left p-3\">\n      <h4>Resumo</h4>\n    </div>\n  )\n}\n\nexport default Resumo\n","import axios from 'axios'\nconst baseUrl = '/api/patients/data'\n\nconst getData = (id, date) => {\n  return axios.get(`${baseUrl}/${id}/${date}`).then(response => response.data)\n}\n\nexport default {\n  getData\n}","import React, { useState, useEffect } from 'react'\nimport Table from 'react-bootstrap/Table'\nimport patientDataService from '../services/dataPatients.js'\n\nconst Dados = ({ id }) => {\n  const [ linhas, setLinhas ] = useState([])\n\n  useEffect(() => {\n    let promises = []\n    const quantidadeLinhas = 5\n\n    const date = new Date()\n    for (let i = 0; i < quantidadeLinhas; i++) {\n      promises.push(patientDataService.getData(id, formatDate(date)))      \n      date.setDate(date.getDate()-1)\n    }\n\n    Promise.all(promises)\n      .then(responses => {\n        const date = new Date()\n\n        for (let i = 0; i < quantidadeLinhas; i++) {\n          const response = responses[i]\n\n          setLinhas(linhas => linhas.concat({\n            data: formatDate(date),\n            numPassos: response.summary.steps,\n            minutosAtivos: response.summary.fairlyActiveMinutes + response.summary.lightlyActiveMinutes + response.summary.veryActiveMinutes,\n            minutosSedentarios: response.summary.sedentaryMinutes\n          }))\n          date.setDate(date.getDate()-1)\n        }\n      })\n\n  }, [id])\n\n  return (\n    <div className=\"border-right border-bottom border-left p-3\">\n      <h4>Dados</h4>\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th>Data</th>\n            <th>n¬∫ de passos</th>\n            <th>Horas ativas</th>\n            <th>Horas Sedentarias</th>\n          </tr>\n        </thead>\n        <tbody>\n          {linhas.map(linha => \n            <tr key={linha.data}>\n              <td>{linha.data}</td>\n              <td>{linha.numPassos}</td>\n              <td>{linha.minutosAtivos/60}</td>\n              <td>{linha.minutosSedentarios/60}</td>\n            </tr>\n          )}\n        </tbody>\n      </Table>\n    </div>\n  )\n}\n\nconst formatDate = date => {\n  let month = '' + (date.getMonth() + 1)\n  let day = '' + date.getDate()\n  let year = date.getFullYear()\n\n  if (month.length < 2) \n      month = '0' + month\n  if (day.length < 2) \n      day = '0' + day\n\n  return [year, month, day].join('-')\n}\n\nexport default Dados\n","import React from 'react'\n\nconst Metas = () => {\n  return (\n    <div className=\"border-right border-bottom border-left p-3\">\n      <h4>Metas</h4>\n    </div>\n  )\n}\n\nexport default Metas\n","import React, { useState, useEffect } from 'react'\nimport {\n  Switch, Route, NavLink,\n  useParams, useRouteMatch\n} from 'react-router-dom'\nimport patientService from '../services/patients.js'\n\nimport Resumo from './Resumo'\nimport Dados from './Dados'\nimport Metas from './Metas'\n\nconst DadosPacientes = () => {\n  const [ patient, setPatient ] = useState({})\n\n  const id = useParams().id\n\n  useEffect(() => {\n    patientService.getOne(id).then(response => setPatient(response))\n  }, [id])\n  \n  const { url } = useRouteMatch()\n\n  return(\n    <>\n      <div>\n        <div>Nome: {patient.name}</div>\n        <div>Telefone: {patient.phone}</div>\n        <div>Idade: </div>\n        <div>Tipo de asma: </div>\n        <div>Observa√ß√µes: </div>\n        <div>√öltima Consulta: </div>\n        <div>ID Fitbit: {patient.fitbitId}</div>\n        <a href={`/auth/fitbit/${id}`}>Conectar ao Fitbit</a>\n      </div>\n\n      <br/>\n\n      <ul className=\"nav nav-tabs\">\n        <li className=\"nav-item\">\n          <NavLink to={`${url}/resumo`} className=\"nav-link\">Resumo</NavLink>\n        </li>\n        <li className=\"nav-item\">\n          <NavLink to={`${url}/dados`} className=\"nav-link\">Dados</NavLink>\n        </li>\n        <li className=\"nav-item\">\n          <NavLink to={`${url}/metas`} className=\"nav-link\">Metas</NavLink>\n        </li>\n      </ul>\n\n      <Switch>\n        <Route path={`${url}/resumo`}>\n          <Resumo />\n        </Route>\n        <Route path={`${url}/dados`}>\n          <Dados id={id}/>\n        </Route>\n        <Route path={`${url}/metas`}>\n          <Metas />\n        </Route>\n      </Switch>\n    </>\n  )}\n\nexport default DadosPacientes","import React from 'react'\n\nconst Home = () => {\n  return (\n    <>\n      <h1>Home</h1>\n    </>\n  )\n}\n\nexport default Home\n","import React from 'react'\n\nconst Ajuda = () => {\n  return (\n    <>\n      <h1>Ajuda</h1>\n    </>\n  )\n}\n\nexport default Ajuda\n","import React from 'react'\nimport {\n  HashRouter as Router,\n  Switch, Route, NavLink\n} from 'react-router-dom'\n\nimport ListaPacientes from './Pacientes/ListaPacientes'\nimport DadosPaciente from './Pacientes/DadosPaciente'\nimport Home from './Home'\nimport Ajuda from './Ajuda'\n\nconst Dashboard = () => {\n  return (\n    <Router>\n      <header className=\"navbar navbar-dark bg-dark\">\n        <h1 className=\"navbar-brand\">Dashboard</h1>\n      </header>\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-sm-3 col-md-2 bg-light py-3 border\">\n            <nav className=\"nav nav-pills flex-column\">\n              <NavLink className=\"nav-item nav-link\" exact to=\"/\">Home</NavLink>\n              <NavLink className=\"nav-item nav-link\" to=\"/pacientes\">Pacientes</NavLink>\n              <NavLink className=\"nav-item nav-link\" to=\"/faq\">FAQ</NavLink>\n              <NavLink className=\"nav-item nav-link\" to=\"/ajuda\">Ajuda</NavLink>\n            </nav>\n          </div>\n\n          <main className=\"col-sm-9 col-md-10 bg-white p-4\">\n            <Switch>\n              <Route path=\"/pacientes/:id\">\n                <DadosPaciente />\n              </Route>\n              <Route path=\"/pacientes\">\n                <ListaPacientes />\n              </Route>\n              <Route path=\"/ajuda\">\n                <Ajuda />\n              </Route>\n              <Route path=\"/\">\n                <Home />\n              </Route>\n            </Switch>\n          </main>\n        </div>\n      </div>\n      <footer className=\"container-fluid text-center bg-dark text-muted p-3\">\n        O c√≥digo desse site est√° dispon√≠vel no <a href=\"https://github.com/bmnascimento/projeto-asma\">GitHub</a>\n      </footer>\n    </Router>\n  )\n}\n\nexport default Dashboard","import React from 'react'\nimport Dashboard from './Dashboard'\nimport Login from './Login'\n\nconst App = () => {\n  return(\n    <Dashboard />\n    //<Login />\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './css/bootstrap.min.css';\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}