{"version":3,"sources":["services/login.js","Login.js","services/patients.js","Dashboard/Pacientes/ListaPacientes.js","services/sintomas.js","services/sintomasSemanal.js","Dashboard/Pacientes/Dados.js","Dashboard/Pacientes/Metas.js","Dashboard/Pacientes/CadastroSintomasDiario.js","Dashboard/Pacientes/Sintomas.js","Dashboard/Pacientes/CadastroSintomasSemanal.js","Dashboard/Pacientes/ControleClinico.js","Dashboard/Pacientes/PerfilPaciente.js","services/usuarios.js","Dashboard/ListaUsuarios.js","Dashboard/Pacientes/CadastroPaciente.js","Dashboard/CadastroUsuario.js","Dashboard/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["login","credentials","a","axios","post","response","data","LoginForm","setUser","alertar","useState","rghg","setRGHG","password","setPassword","lembrarme","setLembrarme","carregando","setCarregando","history","useHistory","handleSubmit","event","preventDefault","loginService","user","window","localStorage","setItem","JSON","stringify","push","Form","onSubmit","Group","controlId","Label","Control","type","placeholder","value","onChange","target","Check","label","checked","Button","variant","Spinner","animation","role","size","Login","alerta","setAlerta","Navbar","bg","Brand","className","Container","Alert","Row","Col","mensagem","setTimeout","formatDate","date","month","getMonth","day","getDate","year","getFullYear","length","join","get","then","id","newObject","put","ListaPacientes","undefined","patients","setPatients","useEffect","patientService","style","width","to","map","patient","key","name","aria-hidden","Dados","linhas","formatMinutos","minutos","Math","floor","String","padStart","Table","striped","bordered","hover","textAlign","linha","numPassos","minutosLeves","minutosModerados","minutosIntensos","minutosSedentarios","Metas","metas","metaPassos","setMetaPassos","metaTempo","setMetaTempo","passos","tempo","metasAtuais","setMetasAtuais","novasMetas","Accordion","Card","Header","Toggle","as","eventKey","Collapse","Body","ProgressBar","animated","now","CadastroSintomasDiario","newPicoFluxo","setNewPicoFluxo","newTosse","setNewTosse","newChiado","setNewChiado","newFaltaDeAr","setNewFaltaDeAr","newAcordar","setNewAcordar","newBombinha","setNewBombinha","newDetalhes","setNewDetalhes","Date","sintomasService","dia","picoDeFluxo","tosse","chiado","faltaDeAr","acordar","bombinha","detalhes","alert","catch","htmlFor","disabled","onClick","Sintomas","lista","responsive","CadastroSintomasSemanal","newFreqAcordou","setNewFreqAcordou","newIntensidadeSintomas","setNewIntensidadeSintomas","newChiadolimitacao","setNewChiadolimitacao","newFreqFaltaDeAr","setNewFreqFaltaDeAr","newFreqChiado","setNewFreqChiado","newFreqBombinha","setNewFreqBombinha","newPorcentagemPrevisto","setNewPorcentagemPrevisto","sintomasSemanalService","freqAcordou","intensidadeSintomas","chiadolimitacao","freqFaltaDeAr","freqChiado","freqBombinha","porcentagemPrevisto","UltimaResposta","resposta","console","log","alternativas","start","columns","alternativa","ControleClinico","PerfilPaciente","setPatient","setLinhas","linhasSintomas","setLinhasSintomas","linhasSintomasSemanal","setLinhasSintomasSemanal","dataFormatada","setDataFormatada","dadosDone","setDadosDone","sintomasDone","setSintomasDone","useParams","fetchFitBitData","objetoData","birthDate","fitbitId","promises","quantidadeLinhas","i","setDate","Promise","all","responses","concat","summary","steps","lightlyActiveMinutes","fairlyActiveMinutes","veryActiveMinutes","sedentaryMinutes","error","fetchSintomas","listaSintomas","fetchSintomasSemanal","url","useRouteMatch","weight","height","phone","href","path","ListaUsuarios","usuarios","setUsuarios","usuarioService","usuario","class","CadastroPaciente","newName","setNewName","newPhone","setNewPhone","newHeight","setNewHeight","newWeight","setNewWeight","newRghg","setNewRghg","newCpf","setNewCpf","newData","setNewData","newPassword","setNewPassword","cpf","min","CadastroUsuario","newType","setNewType","userService","Dashboard","Text","removeItem","App","parse","getItem","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.52ddcfda.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(`${baseUrl}/usuario`, credentials)\n  return response.data\n}\n\nexport default {\n  login\n}\n","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport Alert from 'react-bootstrap/Alert'\r\n\r\nimport loginService from './services/login'\r\n\r\nconst Login = ({ setUser }) => {\r\n  const [alerta, setAlerta] = useState(null)\r\n\r\n  function alertar(mensagem) {\r\n    setAlerta(mensagem)\r\n    setTimeout(() => setAlerta(null), 3000)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <header>\r\n        <Navbar bg=\"dark\" variant=\"dark\">\r\n          <Navbar.Brand>Login</Navbar.Brand>\r\n        </Navbar>\r\n      </header>\r\n      <main className=\"bg-light\">\r\n        <Container>\r\n          {alerta &&\r\n            <Alert variant={'danger'} className={'mt-3'} >\r\n              {alerta}\r\n            </Alert>\r\n          }\r\n          <Row className=\"justify-content-center\">\r\n            <Col className=\"col-md-5 col-lg-4 p-3 m-4 border\">\r\n              <LoginForm setUser={setUser} alertar={alertar} />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </main>\r\n    </>\r\n  )\r\n}\r\n\r\nconst LoginForm = ({ setUser, alertar }) => {\r\n  const [rghg, setRGHG] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [lembrarme, setLembrarme] = useState(false)\r\n  const [carregando, setCarregando] = useState(false)\r\n\r\n  const history = useHistory()\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault()\r\n\r\n    try {\r\n      setCarregando(true)\r\n\r\n      const user = await loginService.login({\r\n        rghg,\r\n        password\r\n      })\r\n\r\n      if (lembrarme)\r\n        window.localStorage.setItem('usuarioLogado', JSON.stringify(user))\r\n\r\n      setUser(user)\r\n      setCarregando(false)\r\n      history.push('/')\r\n\r\n    } catch (exception) {\r\n      setCarregando(false)\r\n      alertar('Usuário ou senha errados')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit} >\r\n      <Form.Group controlId=\"RGHG\">\r\n        <Form.Label>RGHC</Form.Label>\r\n        <Form.Control type=\"text\" placeholder=\"RGHG\" value={rghg} onChange={({ target }) => setRGHG(target.value)} />\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"Password\">\r\n        <Form.Label>Senha</Form.Label>\r\n        <Form.Control type=\"password\" placeholder=\"Senha\" value={password} onChange={({ target }) => setPassword(target.value)} />\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"formBasicCheckbox\">\r\n        <Form.Check type=\"checkbox\" label=\"Lembrar-me\" checked={lembrarme} onChange={({ target }) => setLembrarme(target.checked)} />\r\n      </Form.Group>\r\n\r\n      <Button variant=\"primary\" type=\"submit\">\r\n        {carregando ? <Spinner animation=\"border\" role=\"status\" size=\"sm\" /> : 'Entrar'}\r\n      </Button>\r\n\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default Login","import axios from 'axios'\nconst baseUrl = '/api/patients'\n\nconst getAll = () => {\n  return axios.get(baseUrl).then(response => response.data)\n}\n\nconst getOne = id => {\n  return axios.get(`${baseUrl}/${id}`).then(response => response.data)\n}\n\nconst create = newObject => {\n  return axios.post(baseUrl, newObject).then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  return axios.put(`${baseUrl}/${id}`, newObject).then(response => response.data)\n}\n\nconst deleteOne = id => {\n  return axios.delete(`${baseUrl}/${id}`).then(response => response.data)\n}\n\nconst getData = (id, date) => {\n  return axios.get(`${baseUrl}/data/${id}/${formatDate(date)}`).then(response => response.data)\n}\n\nconst formatDate = date => {\n  let month = '' + (date.getMonth() + 1)\n  let day = '' + date.getDate()\n  let year = date.getFullYear()\n\n  if (month.length < 2)\n    month = '0' + month\n  if (day.length < 2)\n    day = '0' + day\n\n  return [year, month, day].join('-')\n}\n\nexport default {\n  getAll,\n  getOne,\n  create,\n  update,\n  deleteOne,\n  getData\n}\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport patientService from '../../services/patients.js'\nimport Button from 'react-bootstrap/Button'\n\nconst ListaPacientes = () => {\n  const [ patients, setPatients ] = useState(undefined)\n\n  useEffect(() => {\n    patientService.getAll().then(response => setPatients(response))\n  }, [])\n\n  return(\n    <div style={{ width: '300px' }}>\n        <Link to=\"/pacientes/cadastro\"><Button className=\"float-right mt-1\">Novo</Button></Link>\n        <h1>Pacientes</h1>\n          {patients\n            ?\n            <div className=\"list-group my-3\">\n            {patients.map(patient => \n              <Link\n                to={`pacientes/${patient.id}/dados`}\n                key={patient.id}\n                className=\"list-group-item list-group-item-action text-primary\"\n              >\n                  {patient.name}\n              </Link>\n            )}\n            </div>\n            :\n            <div className=\"d-flex align-items-center my-3\">\n              Carregando...\n              <div className=\"spinner-border ml-auto\" role=\"status\" aria-hidden=\"true\"></div>\n            </div>\n          }\n    </div>\n  )}\n\nexport default ListaPacientes","import axios from 'axios'\nconst baseUrl = '/api/sintomas'\n\nconst getAll = (id) => {\n  return axios.get(`${baseUrl}/${id}`).then(response => response.data)\n}\n\nconst create = (id, newObject) => {\n  return axios.post(`${baseUrl}/${id}`, newObject).then(response => response.data)\n}\n\nexport default {\n  getAll,\n  create,\n}","import axios from 'axios'\nconst baseUrl = '/api/sintomasSemanal'\n\nconst getAll = id => {\n  return axios.get(`${baseUrl}/${id}`).then(response => response.data)\n}\n\nconst create = (id, newObject) => {\n  return axios.post(`${baseUrl}/${id}`, newObject).then(response => response.data)\n}\n\nexport default {\n  getAll,\n  create,\n}\n","import React from 'react'\nimport Table from 'react-bootstrap/Table'\n\nconst Dados = ({ linhas }) => {\n  const formatMinutos = minutos => {\n    if (minutos >= 60) {\n      return(`${Math.floor(minutos/60)}h${String(minutos%60).padStart(2, '0')}m`)\n    } else {\n      return(`${String(minutos%60)}m`)\n    }\n  }\n\n  return (\n    <div className=\"border-right border-bottom border-left p-3\">\n      <h4>Dados</h4>\n      <Table striped bordered hover style={{ textAlign: 'center' }}>\n        <thead>\n          <tr>\n            <th>Data</th>\n            <th>Nº de passos</th>\n            <th>Tempo atividade leve</th>\n            <th>Tempo atividade moderada</th>\n            <th>Tempo atividade intensa</th>\n            <th>Tempo sedentário</th>\n          </tr>\n        </thead>\n        <tbody>\n          {linhas.map(linha => \n            <tr key={linha.data}>\n              <td>{linha.data}</td>\n              <td>{linha.numPassos}</td>\n              <td>{formatMinutos(linha.minutosLeves)}</td>\n              <td>{formatMinutos(linha.minutosModerados)}</td>\n              <td>{formatMinutos(linha.minutosIntensos)}</td>\n              <td>{formatMinutos(linha.minutosSedentarios)}</td>\n            </tr>\n          )}\n        </tbody>\n      </Table>\n    </div>\n  )\n}\n\nexport default Dados\n","import React, { useState } from 'react'\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form'\nimport Accordion from 'react-bootstrap/Accordion'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\nimport ProgressBar from 'react-bootstrap/ProgressBar'\n\nimport patientService from './../../services/patients'\n\nconst Metas = ({ id, linhas, metas }) => {\n  const [metaPassos, setMetaPassos] = useState('')\n  const [metaTempo, setMetaTempo] = useState('')\n  const [metasAtuais, setMetasAtuais] = useState(metas ? metas : { passos: 0, tempo: 0 })\n\n  const handleSubmit = async event => {\n    event.preventDefault()\n    const novasMetas = {\n      passos: metaPassos,\n      tempo: metaTempo,\n    }\n    const response = await patientService.update(id, { metas: novasMetas })\n    setMetasAtuais(response.metas)\n  }\n\n  return (\n    <div className=\"border-right border-bottom border-left p-3\">\n      <h4>Metas</h4>\n      <h5>A meta atual é de {metasAtuais.passos && `${metasAtuais.passos} passos`}{(metasAtuais.passos && metasAtuais.tempo) && ' e '}{metasAtuais.tempo && `${metasAtuais.tempo} minutos de atividade`} por dia.</h5>\n      <Accordion>\n        <Card>\n          <Card.Header>\n            <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n              Nova meta\n            </Accordion.Toggle>\n          </Card.Header>\n          <Accordion.Collapse eventKey=\"0\">\n            <Card.Body>\n\n              <Form onSubmit={handleSubmit}>\n                <Form.Row>\n\n                  <Form.Group as={Col} >\n                    <Form.Label>Número de passos</Form.Label>\n                    <Form.Control placeholder=\"Passos\" onChange={({ target }) => setMetaPassos(target.value)} />\n                  </Form.Group>\n\n                  <Form.Group as={Col}>\n                    <Form.Label>Tempo de atividade</Form.Label>\n                    <Form.Control placeholder=\"Tempo\" onChange={({ target }) => setMetaTempo(target.value)} />\n                  </Form.Group>\n\n                </Form.Row>\n\n                <Button variant=\"primary\" type=\"submit\">\n                  Nova meta\n                </Button>\n              </Form>\n\n            </Card.Body>\n          </Accordion.Collapse>\n        </Card>\n      </Accordion>\n      {linhas.map(linha =>\n        <div className=\"mt-3\">\n          <strong>Desempenho em {linha.data}</strong>\n          <ProgressBar animated now={linha.numPassos / metasAtuais.passos * 100} />\n          <div>O paciente atingiu {Math.floor(linha.numPassos / metasAtuais.passos * 100)}% da meta do dia.</div>\n          <div>O paciente andou {linha.numPassos} passos.</div>\n        </div>\n      )\n      }\n    </div>\n  )\n}\n\nexport default Metas\n","import React, { useState } from 'react'\nimport sintomasService from '../../services/sintomas.js'\n\nconst CadastroSintomasDiario = ({ id }) => {\n  const [newPicoFluxo, setNewPicoFluxo] = useState()\n  const [newTosse, setNewTosse] = useState('')\n  const [newChiado, setNewChiado] = useState('')\n  const [newFaltaDeAr, setNewFaltaDeAr] = useState('')\n  const [newAcordar, setNewAcordar] = useState('')\n  const [newBombinha, setNewBombinha] = useState('')\n  const [newDetalhes, setNewDetalhes] = useState('')\n  const [date] = useState(new Date())\n\n  const handleSubmit = event => {\n    event.preventDefault()\n\n    sintomasService.create(id, {\n      dia: date,\n      picoDeFluxo: newPicoFluxo || null,\n      tosse: newTosse || false,\n      chiado: newChiado || false,\n      faltaDeAr: newFaltaDeAr || false,\n      acordar: newAcordar || false,\n      bombinha: newBombinha || false,\n      detalhes: newDetalhes,\n    })\n      .then(() => {\n        alert('Formulário de sintomas enviado!')\n      })\n      .catch(() => alert('Não foi possivel enviar o formulário de sintomas'))\n  }\n\n  return (\n    <div>\n      <h2>Formulário Diário de Sintomas</h2>\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"dateInput\">Data</label>\n          <input disabled value={date} type=\"text\" className=\"form-control\" id=\"dateInput\" />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"picoInput\">Pico de Fluxo</label>\n          <input value={newPicoFluxo} type=\"text\" onChange={event => setNewPicoFluxo(event.target.value)} className=\"form-control\" id=\"picoInput\" />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"tosseInput\">Tosse</label>\n          <input value={newTosse} type=\"checkbox\" onClick={event => setNewTosse(!newTosse)} className=\"form-control\" id=\"tosseInput\" />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"chiadoInput\">Chiado</label>\n          <input value={newChiado} type=\"checkbox\" onClick={event => setNewChiado(!newChiado)} className=\"form-control\" id=\"chiadoInput\" />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"arInput\">Falta de Ar</label>\n          <input value={newFaltaDeAr} type=\"checkbox\" onClick={event => setNewFaltaDeAr(!newFaltaDeAr)} className=\"form-control\" id=\"arInput\" />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"acordarInput\">Acordar</label>\n          <input value={newAcordar} type=\"checkbox\" onClick={event => setNewAcordar(!newAcordar)} className=\"form-control\" id=\"acordarInput\" />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"bombinhaInput\">Bombinha</label>\n          <input value={newBombinha} type=\"checkbox\" onClick={event => setNewBombinha(!newBombinha)} className=\"form-control\" id=\"bombinhaInput\" />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"detalhesInput\">Detalhes</label>\n          <input value={newDetalhes} type=\"textarea\" onChange={event => setNewDetalhes(event.target.value)} className=\"form-control\" id=\"detalhesInput\" />\n        </div>\n        <button type=\"submit\" className=\"btn btn-primary\">Enviar</button>\n      </form>\n    </div>\n  )\n}\n\nexport default CadastroSintomasDiario\n","import React from 'react'\nimport Table from 'react-bootstrap/Table'\nimport { IoIosCheckmark } from 'react-icons/io'\nimport Button from 'react-bootstrap/Button'\nimport Accordion from 'react-bootstrap/Accordion'\nimport Card from 'react-bootstrap/Card'\n\nimport CadastroSintomasDiario from './CadastroSintomasDiario'\n\nconst Sintomas = ({ id, lista }) => {\n  return (\n    <div className=\"border-right border-bottom border-left p-3 mb-3\">\n      <h4>Lista de Sintomas</h4>\n      <Accordion className=\"mb-3\">\n        <Card>\n          <Card.Header>\n            <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n              Novo Sintoma\n            </Accordion.Toggle>\n          </Card.Header>\n          <Accordion.Collapse eventKey=\"0\">\n            <Card.Body>\n              <CadastroSintomasDiario id={id} />\n            </Card.Body>\n          </Accordion.Collapse>\n        </Card>\n      </Accordion>\n\n      <Table responsive striped bordered hover style={{ textAlign: 'center' }}>\n        <thead>\n          <tr>\n            <th>Data</th>\n            <th>Pico de fluxo</th>\n            <th>Teve tosse?</th>\n            <th>Teve chiado?</th>\n            <th>Teve falta de ar?</th>\n            <th>Acordou de madrugada?</th>\n            <th>Usou a bombinha?</th>\n            <th>Observações</th>\n          </tr>\n        </thead>\n        <tbody>\n          {lista.map(linha => {\n            const data = new Date(linha.dia)\n            return (<tr key={linha.dia}>\n              <td>{`${data.getDate()}/${data.getMonth() + 1}/${data.getFullYear()}`}</td>\n              <td>{linha.picoDeFluxo}</td>\n              <td>{linha.tosse && <IoIosCheckmark />}</td>\n              <td>{linha.chiado && <IoIosCheckmark />}</td>\n              <td>{linha.faltaDeAr && <IoIosCheckmark />}</td>\n              <td>{linha.acordar && <IoIosCheckmark />}</td>\n              <td>{linha.bombinha && <IoIosCheckmark />}</td>\n              <td>{linha.detalhes}</td>\n            </tr>)\n          })}\n        </tbody>\n      </Table>\n    </div>\n  )\n}\n\nexport default Sintomas","import React, { useState } from 'react'\nimport sintomasSemanalService from '../../services/sintomasSemanal.js'\n\nconst CadastroSintomasSemanal = ({ id }) => {\n  const [newFreqAcordou, setNewFreqAcordou] = useState('0')\n  const [newIntensidadeSintomas, setNewIntensidadeSintomas] = useState('0')\n  const [newChiadolimitacao, setNewChiadolimitacao] = useState('0')\n  const [newFreqFaltaDeAr, setNewFreqFaltaDeAr] = useState('0')\n  const [newFreqChiado, setNewFreqChiado] = useState('0')\n  const [newFreqBombinha, setNewFreqBombinha] = useState('0')\n  const [newPorcentagemPrevisto, setNewPorcentagemPrevisto] = useState('0')\n\n  const handleSubmit = event => {\n    event.preventDefault()\n\n    const questionario = {\n      freqAcordou: newFreqAcordou,\n      intensidadeSintomas: newIntensidadeSintomas,\n      chiadolimitacao: newChiadolimitacao,\n      freqFaltaDeAr: newFreqFaltaDeAr,\n      freqChiado: newFreqChiado,\n      freqBombinha: newFreqBombinha,\n      porcentagemPrevisto: newPorcentagemPrevisto\n    }\n\n    sintomasSemanalService.create(id, questionario)\n      .then(() => {\n        alert('Formulário de sintomas enviado!')\n      })\n      .catch(() => alert('Não foi possivel enviar o formulário de sintomas'))\n  }\n\n  return (\n    <div>\n      <h4>Questionário de Controle da Asma (ACQ)</h4>\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"nameInput\"> 1) Em média, durante os últimos sete dias, o quão frequentemente você se acordou por causa de sua asma, durante a noite? </label><br />\n          <select value={newFreqAcordou} onChange={event => setNewFreqAcordou(event.target.value)}>\n            <option value=\"0\">Nunca</option>\n            <option value=\"1\">Quase Nunca</option>\n            <option value=\"2\">Poucas Vezes</option>\n            <option value=\"3\">Varias Vezes</option>\n            <option value=\"4\">Muitas Vezes</option>\n            <option value=\"5\">Muitissimas Vezes</option>\n            <option value=\"6\">Incapaz de dormir devido a asma</option>\n          </select>\n          <hr />\n          <label htmlFor=\"nameInput\"> 2) Em média, durante os últimos sete dias, o quão ruins foram os seus sintomas da asma, quando você acordou pela manhã?</label><br />\n          <select value={newIntensidadeSintomas} onChange={event => setNewIntensidadeSintomas(event.target.value)}>\n            <option value=\"0\">Sem sintomas</option>\n            <option value=\"1\">Sintomas muito leves</option>\n            <option value=\"2\">Sintomas leves</option>\n            <option value=\"3\">Sintomas moderados</option>\n            <option value=\"4\">Sintomas um tanto graves</option>\n            <option value=\"5\">Sintomas graves</option>\n            <option value=\"6\">Sintomas muito graves</option>\n          </select>\n          <hr />\n          <label htmlFor=\"nameInput\"> 3)  De um modo geral, durante os últimos sete dias, o quão limitado você tem estado em suas atividades por causa de sua asma?</label><br />\n          <select value={newChiadolimitacao} onChange={event => setNewChiadolimitacao(event.target.value)}>\n            <option value=\"0\">Nada limitado</option>\n            <option value=\"1\">Muito pouco limitado</option>\n            <option value=\"2\">Pouco limitado</option>\n            <option value=\"3\">Moderadamente limitado</option>\n            <option value=\"4\">Muito limitado</option>\n            <option value=\"5\">Exageradamente limitado</option>\n            <option value=\"6\">Totalmente limitado</option>\n          </select>\n          <hr />\n          <label htmlFor=\"nameInput\"> 4)  De um modo geral, durante os últimos sete dias, o quanto de falta de ar você teve por causa de sua asma?</label><br />\n          <select value={newFreqFaltaDeAr} onChange={event => setNewFreqFaltaDeAr(event.target.value)}>\n            <option value=\"0\">Nenhuma</option>\n            <option value=\"1\">Muito pouca</option>\n            <option value=\"2\">Alguma</option>\n            <option value=\"3\">Moderada</option>\n            <option value=\"4\">Bastante</option>\n            <option value=\"5\">Muita</option>\n            <option value=\"6\">Muitíssima</option>\n          </select>\n          <hr />\n          <label htmlFor=\"nameInput\"> 5)  De um modo geral, durante os últimos sete dias, quanto tempo você teve chiado?</label><br />\n          <select value={newFreqChiado} onChange={event => setNewFreqChiado(event.target.value)}>\n            <option value=\"0\">Nunca</option>\n            <option value=\"1\">Quase nunca</option>\n            <option value=\"2\">Pouco tempo</option>\n            <option value=\"3\">Algum tempo</option>\n            <option value=\"4\">Bastante tempo</option>\n            <option value=\"5\">Quase sempre</option>\n            <option value=\"6\">Sempre</option>\n          </select>\n          <hr />\n          <label htmlFor=\"nameInput\"> 6)  Em média, durante os últimos sete dias, quantos jatos de broncodilatador de resgate (Sabutamol, Fenoterol, etc) você usou por dia?</label><br />\n          <select value={newFreqBombinha} onChange={event => setNewFreqBombinha(event.target.value)}>\n            <option value=\"0\">Nenhum</option>\n            <option value=\"1\">1-2 jatos na maior parte dos dias </option>\n            <option value=\"2\">3-4 jatos na maior parte dos dias </option>\n            <option value=\"3\">5-8 jatos na maior parte dos dias </option>\n            <option value=\"4\">9-12 jatos na maior parte dos dias </option>\n            <option value=\"5\"> 3-16 jatos na maior parte dos dias </option>\n            <option value=\"6\">Mais de 16 jatos por dia</option>\n          </select>\n          <hr />\n          <label htmlFor=\"nameInput\"> 7)  . VEF1 pré broncodilatador ______ VEF1 previsto ______ VEF1 % previsto</label><br />\n          <select value={newPorcentagemPrevisto} onChange={event => setNewPorcentagemPrevisto(event.target.value)}>\n            <option value=\"0\">mais que 95% do previsto</option>\n            <option value=\"1\">95-90% do previsto </option>\n            <option value=\"2\">89-80% do previsto </option>\n            <option value=\"3\">79-70% do previsto </option>\n            <option value=\"4\">69-60% do previsto </option>\n            <option value=\"5\">59-50% do previsto </option>\n            <option value=\"6\">menos que 50% do previsto </option>\n          </select>\n        </div>\n\n        <button type=\"submit\" className=\"btn btn-primary\">Enviar</button>\n      </form>\n    </div>\n  )\n}\n\nexport default CadastroSintomasSemanal\n","import React from 'react'\nimport Accordion from 'react-bootstrap/Accordion'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\n\nimport CadastroSintomasSemanal from './CadastroSintomasSemanal'\n\nconst ControleClinico = ({ id, lista }) => {\n  return (\n    <div className=\"border-right border-bottom border-left p-3\">\n      <h4>Controle clínico</h4>\n      <Accordion className=\"mb-3\">\n        <Card>\n          <Card.Header>\n            <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n              Novo questionário\n            </Accordion.Toggle>\n          </Card.Header>\n          <Accordion.Collapse eventKey=\"0\">\n            <Card.Body>\n              <CadastroSintomasSemanal id={id} />\n            </Card.Body>\n          </Accordion.Collapse>\n        </Card>\n      </Accordion>\n      {lista.length > 0\n        ?\n        <UltimaResposta resposta={lista[0]} />\n        :\n        <p>O questionário não foi respondido nenhuma vez.</p>\n      }\n    </div>\n  )\n}\n\nfunction UltimaResposta({ resposta }) {\n  console.log(resposta)\n  const alternativas = {\n    freqAcordou: ['Nunca', 'Quase nunca', 'Poucas vezes', 'Várias vezes', 'Muitas vezes', 'Muitíssimas vezes', 'Incapaz de dormir devido a asma'],\n    intensidadeSintomas: ['Sem sintomas', 'Sintomas muito leves', 'Sintomas leves', 'Sintomas moderados', 'Sintomas um tanto graves', 'Sintomas graves', 'Sintomas muito graves'],\n    chiadolimitacao: ['Nunca', 'Quase nunca', 'Poucas vezes', 'Várias vezes', 'Muitas vezes', 'Muitíssimas vezes', 'Incapaz de dormir devido a asma'],\n    freqFaltaDeAr: ['Nunca', 'Quase nunca', 'Poucas vezes', 'Várias vezes', 'Muitas vezes', 'Muitíssimas vezes', 'Incapaz de dormir devido a asma'],\n    freqChiado: ['Nunca', 'Quase nunca', 'Poucas vezes', 'Várias vezes', 'Muitas vezes', 'Muitíssimas vezes', 'Incapaz de dormir devido a asma'],\n    freqBombinha: ['Nunca', 'Quase nunca', 'Poucas vezes', 'Várias vezes', 'Muitas vezes', 'Muitíssimas vezes', 'Incapaz de dormir devido a asma'],\n    porcentagemPrevisto: ['Nunca', 'Quase nunca', 'Poucas vezes', 'Várias vezes', 'Muitas vezes', 'Muitíssimas vezes', 'Incapaz de dormir devido a asma'],\n  }\n  return (\n    <ol>\n      <li>\n        Em média, durante os últimos sete dias, o quão frequentemente você se acordou por causa de sua asma, durante a noite?\n          <ol start=\"0\" style={{ columns: 2 }}>\n          {alternativas.intensidadeSintomas.map((alternativa, key) =>\n            <li key={key}>\n              {resposta.intensidadeSintomas === key\n                ?\n                <strong>{alternativa}</strong>\n                :\n                alternativa\n              }\n            </li>\n          )}\n        </ol>\n      </li>\n      <br />\n      <li>\n        Em média, durante os últimos sete dias, o quão frequentemente você se acordou por causa de sua asma, durante a noite?\n          <ol start=\"0\" style={{ columns: 2 }}>\n          {alternativas.chiadolimitacao.map((alternativa, key) =>\n            <li key={key}>\n              {resposta.chiadolimitacao === key\n                ?\n                <strong>{alternativa}</strong>\n                :\n                alternativa\n              }\n            </li>\n          )}\n        </ol>\n      </li>\n      <br /><li>\n        Em média, durante os últimos sete dias, o quão frequentemente você se acordou por causa de sua asma, durante a noite?\n          <ol start=\"0\" style={{ columns: 2 }}>\n          {alternativas.chiadolimitacao.map((alternativa, key) =>\n            <li key={key}>\n              {resposta.chiadolimitacao === key\n                ?\n                <strong>{alternativa}</strong>\n                :\n                alternativa\n              }\n            </li>\n          )}\n        </ol>\n      </li>\n      <br /><li>\n        Em média, durante os últimos sete dias, o quão frequentemente você se acordou por causa de sua asma, durante a noite?\n          <ol start=\"0\" style={{ columns: 2 }}>\n          {alternativas.freqFaltaDeAr.map((alternativa, key) =>\n            <li key={key}>\n              {resposta.freqFaltaDeAr === key\n                ?\n                <strong>{alternativa}</strong>\n                :\n                alternativa\n              }\n            </li>\n          )}\n        </ol>\n      </li>\n      <br /><li>\n        Em média, durante os últimos sete dias, o quão frequentemente você se acordou por causa de sua asma, durante a noite?\n          <ol start=\"0\" style={{ columns: 2 }}>\n          {alternativas.freqChiado.map((alternativa, key) =>\n            <li key={key}>\n              {resposta.freqChiado === key\n                ?\n                <strong>{alternativa}</strong>\n                :\n                alternativa\n              }\n            </li>\n          )}\n        </ol>\n      </li>\n      <br /><li>\n        Em média, durante os últimos sete dias, o quão frequentemente você se acordou por causa de sua asma, durante a noite?\n          <ol start=\"0\" style={{ columns: 2 }}>\n          {alternativas.freqBombinha.map((alternativa, key) =>\n            <li key={key}>\n              {resposta.freqBombinha === key\n                ?\n                <strong>{alternativa}</strong>\n                :\n                alternativa\n              }\n            </li>\n          )}\n        </ol>\n      </li>\n      <br /><li>\n        Em média, durante os últimos sete dias, o quão frequentemente você se acordou por causa de sua asma, durante a noite?\n          <ol start=\"0\" style={{ columns: 2 }}>\n          {alternativas.porcentagemPrevisto.map((alternativa, key) =>\n            <li key={key}>\n              {resposta.porcentagemPrevisto === key\n                ?\n                <strong>{alternativa}</strong>\n                :\n                alternativa\n              }\n            </li>\n          )}\n        </ol>\n      </li>\n      <br />\n    </ol>\n  )\n}\n\nexport default ControleClinico\n","import React, { useState, useEffect } from 'react'\nimport {\n  Switch, Route, NavLink,\n  useParams, useRouteMatch\n} from 'react-router-dom'\nimport Spinner from 'react-bootstrap/Spinner'\n\nimport patientService from './../../services/patients'\nimport sintomasService from './../../services/sintomas'\nimport sintomasSemanalService from './../../services/sintomasSemanal'\n\nimport Dados from './Dados'\nimport Metas from './Metas'\nimport Sintomas from './Sintomas'\nimport ControleClinico from './ControleClinico'\n\nconst PerfilPaciente = () => {\n  const [patient, setPatient] = useState(undefined)\n  const [linhas, setLinhas] = useState([])\n  const [linhasSintomas, setLinhasSintomas] = useState([])\n  const [linhasSintomasSemanal, setLinhasSintomasSemanal] = useState([])\n  const [dataFormatada, setDataFormatada] = useState()\n  const [dadosDone, setDadosDone] = useState(false)\n  const [sintomasDone, setSintomasDone] = useState(false)\n\n  const id = useParams().id\n\n  useEffect(() => {\n    const fetchFitBitData = async () => {\n      try {\n        const patient = await patientService.getOne(id)\n        setPatient(patient)\n\n        const objetoData = new Date(patient.birthDate)\n        setDataFormatada(`${objetoData.getDate()}/${objetoData.getMonth()+1}/${objetoData.getFullYear()}`)\n    \n        // Request dos dados do Fitbit\n        if (patient.fitbitId) {\n          let promises = []\n          const quantidadeLinhas = 5\n    \n          let date = new Date()\n          for (let i = 0; i < quantidadeLinhas; i++) {\n            promises.push(patientService.getData(id, date))\n            date.setDate(date.getDate() - 1)\n          }\n    \n          const responses = await Promise.all(promises)\n    \n          date = new Date()\n    \n          for (let i = 0; i < quantidadeLinhas; i++) {\n            const response = responses[i]\n    \n            setLinhas(linhas => linhas.concat({\n              data: `${date.getDate()}/${date.getMonth()+1}/${date.getFullYear()}`,\n              numPassos: response.summary.steps,\n              minutosLeves: response.summary.lightlyActiveMinutes,\n              minutosModerados: response.summary.fairlyActiveMinutes,\n              minutosIntensos: response.summary.veryActiveMinutes,\n              minutosSedentarios: response.summary.sedentaryMinutes\n            }))\n            date.setDate(date.getDate() - 1)\n          }\n        }\n\n        setDadosDone(true)\n      } catch (error) {\n        console.error(error)\n      }      \n    }\n\n    const fetchSintomas = async () => {\n      try {\n        // Request dos sintomas\n        const listaSintomas = await sintomasService.getAll(id)\n        setLinhasSintomas(listaSintomas)\n        setSintomasDone(true)\n      } catch(error) {\n        console.error(error)\n      }\n    }\n\n    const fetchSintomasSemanal = async () => {\n      try {\n        // Request dos sintomas\n        const listaSintomas = await sintomasSemanalService.getAll(id)\n        setLinhasSintomasSemanal(listaSintomas)\n      } catch(error) {\n        console.error(error)\n      }\n    }\n\n    fetchFitBitData()\n    fetchSintomas()\n    fetchSintomasSemanal()\n  }, [id])\n\n  const { url } = useRouteMatch()\n\n  return (\n    <>\n      {!(dadosDone && sintomasDone) || patient === undefined\n        ?\n        <>\n          <Spinner animation=\"border\" role=\"status\" size=\"sm\"/> Carregando...\n        </>\n        :\n        <>\n          <div>\n            <div>Nome: {patient.name}</div>\n            <div>Peso: {patient.weight} kg</div>\n            <div>Altura: {patient.height} cm</div>\n            <div>Telefone: {patient.phone}</div>\n            <div>RGHC: {patient.rghg}</div>\n            <div>Data de Nascimento: {dataFormatada}</div>\n            <div>ID Fitbit: {patient.fitbitId ? patient.fitbitId : <a href={`/auth/fitbit/${id}`}>Conectar ao Fitbit</a>}</div>\n\n          </div>\n\n          <br />\n\n          <ul className=\"nav nav-tabs\">\n            <li className=\"nav-item\">\n              <NavLink to={`${url}/dados`} className=\"nav-link\">Dados</NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink to={`${url}/metas`} className=\"nav-link\">Metas</NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink to={`${url}/sintomas`} className=\"nav-link\">Sintomas</NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink to={`${url}/controle`} className=\"nav-link\">Controle clínico</NavLink>\n            </li>\n          </ul>\n\n          <Switch>\n            <Route path={`${url}/dados`}>\n              {patient.fitbitId ? <Dados linhas={linhas} /> : <div className=\"border-right border-bottom border-left p-3\">Não há conexão com Fitbit</div>}\n            </Route>\n            <Route path={`${url}/metas`}>\n              <Metas id={id} linhas={linhas} metas={patient.metas} />\n            </Route>\n            <Route path={`${url}/sintomas`}>\n              <Sintomas id={id} lista={linhasSintomas}/>\n            </Route>\n            <Route path={`${url}/controle`}>\n              <ControleClinico id={id} lista={linhasSintomasSemanal} />\n            </Route>\n          </Switch>\n        </>\n      }\n    </>\n  )\n}\n\nexport default PerfilPaciente","import axios from 'axios'\nconst baseUrl = '/api/usuarios'\n\nconst getAll = () => {\n  return axios.get(baseUrl).then(response => response.data)\n}\n\nconst create = newObject => {\n  return axios.post(baseUrl, newObject).then(response => response.data)\n}\n\nexport default {\n  getAll,\n  create\n}\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport usuarioService from '../services/usuarios.js'\nimport Button from 'react-bootstrap/Button'\n\nconst ListaUsuarios = () => {\n  const [ usuarios, setUsuarios ] = useState(undefined)\n\n  useEffect(() => {\n    usuarioService.getAll().then(response => setUsuarios(response))\n  }, [])\n\n  return(\n    <div style={{ width: '300px' }}>\n        <Link to=\"/usuarios/cadastro\"><Button className=\"float-right mt-1\">Novo</Button></Link>\n        <h1>Usuários</h1>\n\n        {usuarios ?\n          <div className=\"list-group my-3\">\n          {usuarios.map(usuario => \n            <div\n              key={usuario.id}\n              className=\"list-group-item d-flex justify-content-between align-items-center\"\n            >\n                {usuario.name} - {usuario.rghg} {usuario.type === 'admin' && <span class=\"badge badge-primary badge-pill\">Admin</span>}\n            </div>\n          )}\n          </div>\n          :\n          <div className=\"d-flex align-items-center my-3\">\n            Carregando...\n            <div className=\"spinner-border ml-auto\" role=\"status\" aria-hidden=\"true\"></div>\n          </div>\n          }\n    </div>\n  )}\n\nexport default ListaUsuarios","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport patientService from '../../services/patients.js'\r\n\r\nconst CadastroPaciente = () => {\r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newPhone, setNewPhone ] = useState('')\r\n  const [ newHeight, setNewHeight ] = useState('')\r\n  const [ newWeight, setNewWeight ] = useState('')\r\n  const [ newRghg, setNewRghg ] = useState('')\r\n  const [ newCpf, setNewCpf ] = useState('')\r\n  const [ newData, setNewData ] = useState('')\r\n  const [ newPassword, setNewPassword ] = useState('')\r\n  \r\n  const history = useHistory()\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault()\r\n\r\n    patientService.create({ name: newName, phone: newPhone, height: newHeight, weight: newWeight, rghg: newRghg, cpf: newCpf, birthDate: newData, password: newPassword })\r\n      .then(response => {\r\n        history.push('/pacientes')\r\n      })\r\n      .catch(() => alert('nao foi possivel adicionar o paciente'))\r\n  }\r\n\r\n  return(\r\n    <div style={{ width: '300px' }}>\r\n      <h2>Cadastrar Paciente</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"nameInput\">Nome</label>\r\n          <input value={newName} type=\"text\" onChange={event => setNewName(event.target.value)} className=\"form-control\" id=\"nameInput\"/>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"weightInput\">Peso (kg)</label>\r\n          <input value={newWeight} type=\"number\" min=\"1\" onChange={event => setNewWeight(event.target.value)} className=\"form-control\" id=\"weightInput\"/>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"heightInput\">Altura (cm)</label>\r\n          <input value={newHeight} type=\"number\" min=\"1\" onChange={event => setNewHeight(event.target.value)} className=\"form-control\" id=\"heightInput\"/>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"phoneInput\">Telefone</label>\r\n          <input value={newPhone} type=\"tel\" onChange={event => setNewPhone(event.target.value)} className=\"form-control\" id=\"phoneInput\"/>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"rghgInput\">RGHG</label>\r\n          <input value={newRghg} type=\"text\" onChange={event => setNewRghg(event.target.value)} className=\"form-control\" id=\"rghgInput\"/>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"cpfInput\">CPF</label>\r\n          <input value={newCpf} type=\"text\" onChange={event => setNewCpf(event.target.value)} className=\"form-control\" id=\"cpfInput\"/>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"dataInput\">Data de Nascimento</label>\r\n          <input value={newData} type=\"date\" onChange={event => setNewData(event.target.value)} className=\"form-control\" id=\"dataInput\"/>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"passwordInput\">Senha</label>\r\n          <input value={newPassword} type=\"text\" onChange={event => setNewPassword(event.target.value)} className=\"form-control\" id=\"passwordInput\"/>\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">Adicionar</button>\r\n      </form>\r\n    </div>\r\n  )}\r\n\r\nexport default CadastroPaciente","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport userService from '../services/usuarios.js'\r\n\r\nconst CadastroUsuario = () => {\r\n  const [newName, setNewName] = useState('')\r\n  const [newRghg, setNewRghg] = useState('')\r\n  const [newPassword, setNewPassword] = useState('')\r\n  const [newType, setNewType] = useState('')\r\n\r\n  const history = useHistory()\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault()\r\n\r\n    userService.create({ name: newName, rghg: newRghg, password: newPassword, type: newType })\r\n      .then(response => {\r\n        history.push('/usuarios')\r\n      })\r\n      .catch(() => alert('nao foi possivel adicionar o profissional'))\r\n\r\n  }\r\n\r\n  return (\r\n    <div style={{ width: '300px' }}>\r\n      <h2>Cadastro de Usuário</h2>\r\n\r\n      <div>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"nameInput\">Nome</label>\r\n            <input value={newName} type=\"text\" onChange={event => setNewName(event.target.value)} className=\"form-control\" id=\"nameInput\" />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"rghgInput\">RGHG</label>\r\n            <input value={newRghg} type=\"text\" onChange={event => setNewRghg(event.target.value)} className=\"form-control\" id=\"rghgInput\" />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"passwordInput\">Senha</label>\r\n            <input value={newPassword} type=\"text\" onChange={event => setNewPassword(event.target.value)} className=\"form-control\" id=\"passwordInput\" />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"typeInput\">Tipo</label>\r\n            <select id=\"typeInput\" name=\"tipo\" value={newType} onChange={event => setNewType(event.target.value)} className=\"form-control\">\r\n              <option value=\"profissional\">Profissional de Saúde</option>\r\n              <option value=\"admin\">Administrador</option>\r\n            </select>\r\n          </div>\r\n\r\n          <button type=\"submit\" className=\"btn btn-primary\">Adicionar</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CadastroUsuario","import React from 'react'\nimport { Switch, Route, NavLink, Redirect } from 'react-router-dom'\nimport ListaPacientes from './Pacientes/ListaPacientes'\nimport PerfilPaciente from './Pacientes/PerfilPaciente'\nimport ListaUsuarios from './ListaUsuarios'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Button from 'react-bootstrap/Button'\nimport CadastroPaciente from './Pacientes/CadastroPaciente'\nimport CadastroUsuario from './CadastroUsuario'\n\nconst Dashboard = ({ user, setUser }) => {\n  const logout = () => {\n    window.localStorage.removeItem('usuarioLogado')\n    setUser(null)\n  }\n\n  return (\n    <>\n      <header>\n        <Navbar bg=\"dark\" variant=\"dark\">\n          <Navbar.Brand>Dashboard</Navbar.Brand>\n          <Navbar.Toggle />\n          <Navbar.Collapse className=\"justify-content-end\">\n            <Navbar.Text>\n              Logado como {user.name} <Button variant=\"dark\" onClick={logout}>Logout</Button>\n            </Navbar.Text>\n          </Navbar.Collapse>\n        </Navbar>\n      </header>\n      <main className=\"container-fluid h-100\">\n        <div className=\"row h-100\">\n          <div className=\"col-sm-3 col-md-2 bg-light py-3 border-right\">\n            <nav className=\"nav nav-pills flex-column\">\n              <NavLink className=\"nav-item nav-link\" to=\"/pacientes\">Pacientes</NavLink>\n              <NavLink className=\"nav-item nav-link\" to=\"/usuarios\">Usuários</NavLink>\n            </nav>\n          </div>\n\n          <main className=\"col-sm-9 col-md-10 bg-white p-4\">\n            <Switch>\n              <Route path=\"/pacientes/cadastro\">\n                <CadastroPaciente />\n              </Route>\n              <Route path=\"/pacientes/:id\">\n                <PerfilPaciente />\n              </Route>\n              <Route path=\"/pacientes\">\n                <ListaPacientes />\n              </Route>\n              <Route path=\"/usuarios/cadastro\">\n                <CadastroUsuario />\n              </Route>\n              <Route path=\"/usuarios\">\n                <ListaUsuarios />\n              </Route>\n              <Route path=\"/\">\n                <Redirect to=\"/pacientes\"/>\n              </Route>\n            </Switch>\n          </main>\n        </div>\n      </main>\n    </>\n  )\n}\n\nexport default Dashboard","import React, { useState } from 'react'\nimport {\n  HashRouter as Router,\n  Switch, Route, Redirect\n} from 'react-router-dom'\n\nimport Login from './Login'\nimport Dashboard from './Dashboard/Dashboard'\n\nconst App = () => {\n  const [user, setUser] = useState(JSON.parse(window.localStorage.getItem('usuarioLogado')))\n\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/login\">\n          <Login setUser={setUser} />\n        </Route>\n        <Route path=\"/\">\n          {user ? <Dashboard user={user} setUser={setUser} /> : <Redirect to=\"/login\" />}\n        </Route>\n      </Switch>\n      <footer className=\"text-center bg-dark text-muted p-3 mt-auto\">\n        O código desse site está disponível no <a href=\"https://github.com/bmnascimento/projeto-asma\">GitHub</a>\n      </footer>\n    </Router>\n  )\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      //registration.showNotification('teste')\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './css/bootstrap.min.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}